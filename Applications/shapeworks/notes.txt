Notes for merging individual executables' functionality into shapeworks classes.
-------------------------------------------------------------------------------
Notes below identify command name changes and any parameter name changes, which
have been intentionally minimized in order to facilite upgrading existing
scripts and python apps that simply call the external executables.

Note that duplicate functionality has been discovered and is noted with the commands below.

HOWTO start a new command:
 0) decide which command to do next, then create a branch from executable for that command:
  $ git checkout executable
  $ git pull
  $ git checkout -b executable_<command>
 1) copy and modify boilerplate for the new command in Commands.h and Commands.cpp and append it to the end of these files
 2) add the command in shapeworks.cpp's main(): shapeworks.addCommand(Example::getCommand());
 3) add the new function to its associated class (probably Image or Mesh for now)
 4) find all uses of the command (in .sh and .py files) and change them to use the new shapeworks subcommand:
  $ find Examples -name "*" -type f -exec grep -i "OldCommandName" {} \; -print
 5) test command as needed to ensure it works the same as before (unless there was already a bug :)
  5b) add unit tests for new classes (follow Alan's example for a function in Image)
 6) remove the old command from its directory's CMakeLists.txt and `git rm OldCommandName.cxx`
 7) commit the results and make a pull request *to executable* (not to master)
 
General tasks:
-----------------------------
[x] implement postfix commands so that results of previous command are used by successive commands
[-] detect and report to the user when no output file is specified for the last command (decided against this)
[] remove camelcase from all shapeworks subcommand arguments (note: we are deliberately still using CamelCase for the command classes themselves)
[] create example C++ app(s) that show using these classes directly
[] add unit tests for new classes (follow Alan's example for a function in Image)
[] as we go, add/update documentation to Documentation/ShapeWorksCommands/ShapeworksCmdTools.md, which is a consolidation of all the individual readmes from when I moved the commands into a set of common directories rather than one directory per command
[-] test write issue I noticed (once outfile is set, does it just write every time) (n/a with following change)
  [x] change --infilename/--outfilename to be full commands (read/writeimage, read/writemesh)
[] In the Image class itself, create a wrapper for all these filter functions that itself just accepts a function to create a filter to be executed (Updated)

Commands:   (* means OptionParser already used, otherwise just argv)
-----------------------------
ShapeWorksToolsConsolidation -> https://docs.google.com/spreadsheets/d/17gevfSR-bY3cSr0C-rAmOe6kE8OtrFv06iWt_W10T1M/

Image commands:

[x] readimage
[x] writeimage
[x] binarize (created new command by breaking down isoresample)
[x] recenter (created new command by breaking down isoresample)
[x] *AntiAliasing -> shapeworks antialias
 o ShapeWorksGroom class duplicates antialias functionality, has different defaults
 o Examples
 - shapeworks antialias readimage --name /Users/cam/code/ShapeWorks/ShapeWorks/Examples/Python/TestEllipsoids/Ellipsoids_UnPrepped/seg.ellipsoid_29.nrrd antialias --numIterations 75 --maxRMSError 0.03 writeimage --name ./foobar.nrrd

 - shapeworks readimage --name /Users/cam/code/ShapeWorks/ShapeWorks/Examples/Python/TestEllipsoids/Ellipsoids_UnPrepped/seg.ellipsoid_0.nrrd binarize isoresample --isoSpacing 1.0 --bSplineInterp True recenterimage binarize writeimage --name /Users/cam/Desktop/tmp/resample_image_test_bools.nrrd

 Note: numLayers expands in all dimensions, a sample size for a region distance n around an n-d image

[] ClipVolume
[] *CloseHoles
[] *CropImages
[] *ExtractGivenLabelImage
[] *FastMarching
[] *FindLargestBoundingBox
[x] *PadVolumeWithConstant -> shapeworks pad
 o Examples:
 - ./shapeworks readimage --name /Users/archanasrisubramanian/code/ShapeWorks/Examples/Python/Ellipsoids/Ellipsoids_UnPrepped/seg.ellipsoid_0.nrrd pad --padding 0 --value 0.0 writeimage --name /Users/archanasrisubramanian/Desktop/shapeworks_results/padvolume_seg.ellipsoid_0.nrrd

 - ./PadVolumeWithConstant --inFilename=/Users/archanasrisubramanian/code/ShapeWorks/Examples/Python/Ellipsoids/Ellipsoids_UnPrepped/seg.ellipsoid_0.nrrd --outFilename /Users/archanasrisubramanian/Desktop/shapeworks_results/oldpadvolume_seg.ellipsoid_0.nrrd --paddingSize=0 --paddingValue=0.0

[] *ReflectVolumes

[x] ResampleVolumesToBeIsotropic -> shapeworks isoresample
 o Examples:
  - ResampleVolumesToBeIsotropic --inFilename=/Users/cam/code/ShapeWorks/ShapeWorks/Examples/Python/TestEllipsoids/Ellipsoids_UnPrepped/seg.ellipsoid_29.nrrd --outFilename /Users/cam/Desktop/tmp/ResampleVolumesOldVersion-ellipsoid_29.nrrd --isBinary 1 --isoSpacing 1.0 --isCenterImageOn 1

  - shapeworks readimage --name /Users/cam/code/ShapeWorks/ShapeWorks/Examples/Python/TestEllipsoids/Ellipsoids_UnPrepped/seg.ellipsoid_0.nrrd antialias isoresample --isoSpacing 1.0 recenterimage binarize writeimage --name /Users/cam/Desktop/tmp/resample_image_test_bools.nrrd

[] *ThresholdImages
[] TopologyPreservingSmoothing
[] *WriteImageInfoToText
[] itkTBGACLevelSetImageFilter (also has .txx file, ugh)

Mesh commands:  (some of these may not actually be executables)

[] readmesh  (functions exist, they just don't do anything)
[] writemesh (functions exist, they just don't do anything)
ClipClosedSurface
ComputeCurvatureAndCoordFiles
ComputeGeodesicDistanceFromVerticesToPoints
ComputeGeodesicDistanceToCurve
ComputeGeodesicDistanceToLandmark
ComputeMeanNormals
ComputeMeshGeodesics
ComputeRasterizationVolumeOriginAndSize
ExtractVertexFeatureFromMesh
FillMeshHoles
FixCuttingPlanes
GenerateBinaryAndDTImagesFromMeshes
GenerateFeatureGradientFiles
GenerateFidsFiles
GenerateFidsFilesFromMeshes
GenerateNormalFeaFiles
GetFeatureVolume
GradientTesting
PreviewCmd
[] PreviewMeshQC/
 - a finite element mesh class
 - doesn't appear to be our creation
 - probably update it and move it to ExternalLibs
ProbeFeatureVolumesAtMeshVertices
ProbeNormals
ProjectPointsOntoMesh
ReconstructMeanSurface
ReconstructSamplesAlongPCAModes
ReconstructSurface
ReflectMesh
RemoveFidsDTLeakage
[] SmoothMesh -> shapeworks smoothmesh
WriteFeatureGradientAsText
[x] deprecated/  (git rm -r deprecated)
fea2vtk
itkMultiplyByConstantImageFilter.h
meshFIM.cpp
meshFIM.h

Optimize commands:

ShapeWorksRunApp.h (save this one till last or not at all)
[] bring up during next meeting since this is a full-fledged application, not merely a utility.
   It might constitute a class by itself.
   It seems to only use vtk and ITK, not any of the rest of the ShapeWorks framework.
    - ah! except ParticleSystem's files (in the Optimize/ParticleSystem) are misnamed as itkParticle*
    - but ParticleSystem is already a class. It should probably be moved, but it already stands alone

Alignment commands:

ApplyRigid3DTransformationToImage
ICPRigid3DImageRegistration
ICPRigid3DMeshRegistration
Procrustes3D.cpp
Procrustes3D.h
[] ReflectMeshes
[] ResampleVolumeToIsotropic -> see if it's used anywhere and convert those cases to use new resampleimage command
ResizeOriginResampleVolumes
Transforms/
TranslateImages
[] TranslateShapeToImageOrigin
TranslationTransform

Analyze commands:

MeshFromDT.cpp
MeshFromDT_InputParams.h
Reconstruction.cpp
Reconstruction.h
Vis.cpp
Vis.h

Utils commands:

FeaFromVTK
GenericMeshConversion
MeshFromDistanceTransforms
VTKUnstructuredGridToPolyData
itkImageToVTKImageFilter.h
itkImageToVTKImageFilter.txx
ply2vtk
stl2ply
stl2vtk
vtk2ply

  

