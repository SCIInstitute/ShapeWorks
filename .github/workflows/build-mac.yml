name: Mac Build

on:
  push:
    branches:
      - master
      - release_v*
    tags:
    - '*'
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  SW_PORTAL_LOGIN: ${{ secrets.PORTAL_LOGIN }}
  CACHE_HOST: ${{ secrets.SSH_HOST }}
  
jobs:
  build:

    runs-on: macos-latest
    
    steps:

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    
    - name: OS Setup
      run: |
        sudo chown -R $UID $CONDA
        conda init zsh
        source ~/.zshrc
        brew install ccache md5sha1sum pigz gnu-tar

    - name: Acquire 10.13 SDK
      run: |
        curl --retry 5 -L -o $HOME/MacOSX10.13.sdk.tar.gz http://www.sci.utah.edu/~amorris/MacOSX10.13.sdk.tar.gz
        cd $HOME && tar -xzf MacOSX10.13.sdk.tar.gz
        
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Get tags
      run: git fetch --unshallow origin +refs/tags/*:refs/tags/*
        
    - name: Restore Caches
      shell: bash -l {0}
      run: .github/workflows/restore_caches.sh
    
    - name: Conda Installs
      shell: bash -l {0}
      run: .github/workflows/gha_conda.sh

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: QtCache-mac

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.13.0
      with:
        version: "5.9.9"
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Build Dependencies
      shell: bash -l {0}
      run: .github/workflows/gha_deps.sh

    - name: cmake
      shell: bash -l {0}
      run: conda activate shapeworks && mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS=-g -DCMAKE_PREFIX_PATH=$HOME/install -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DPython3_ROOT_DIR:FILEPATH=${CONDA_PREFIX} -DUSE_OPENMP=OFF -DBuild_PythonAPI=ON -DBuild_Studio=ON -DBuild_View2=ON -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/shapeworks-install -DCMAKE_OSX_SYSROOT="$HOME/MacOSX10.13.sdk" -DCMAKE_OSX_DEPLOYMENT_TARGET="10.13" -DBUILD_DOCUMENTATION=ON ..

    - name: make
      shell: bash -l {0}
      run: conda activate shapeworks && cd build && make -j4
      
    - name: make install
      shell: bash -l {0}
      run: conda activate shapeworks && cd build && make install

    - name: Build Binary Package
      shell: bash -l {0}
      env:
        PR_NUMBER: ${{ github.event.number }}
      run: conda activate shapeworks && ./Support/package.sh tag ${GITHUB_WORKSPACE}/shapeworks-install $HOME/install

    - name: make test
      shell: bash -l {0}
      run: conda activate shapeworks && source ./devenv.sh ./build/bin && cd build && ctest -VV

    - uses: actions/upload-artifact@v2
      with:
        name: artifact-${{github.sha}}-mac
        path: ${{runner.workspace}}/ShapeWorks/artifacts

    - name: Deploy
      id: deploy
      if: github.ref == 'refs/heads/master'
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "dev-mac"
        prerelease: true
        title: "Development Build for Mac"
        files: |
             ${{runner.workspace}}/ShapeWorks/artifacts/*.zip
             ${{runner.workspace}}/ShapeWorks/artifacts/*.pkg

    - name: Deploy Docs
      if: github.ref == 'refs/heads/master'
      shell: bash -l {0}
      run: conda activate shapeworks && pwd && ls && ./Support/deploy_docs.sh ${GITHUB_WORKSPACE}/build
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
             
    - name: Store ccache
      shell: bash -l {0}
      run: .github/workflows/store_ccache.sh

    - name: Copy artifact
      shell: bash -l {0}
      run: .github/workflows/copy_artifact.sh artifact-${{github.sha}}-mac ${{runner.workspace}}/ShapeWorks/artifacts
      
