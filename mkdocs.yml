site_name: ShapeWorks
site_url: http://www.sci.utah.edu/software/shapeworks.html
repo_url: https://github.com/SCIInstitute/ShapeWorks
edit_uri: edit/master/docs/ # should be changed to master branch
site_description: The official documentation of ShapeWorks 
site_author: Shireen Elhabian et al.
use_directory_urls: false
docs_dir: 'docs/'
copyright: Copyright Â© 1998 - 2021 Scientific Computing and Imaging Institute. All rights reserved. This project is supported by the National Institutes of Health under grant numbers NIBIB-U24EB029011, NIAMS-R01AR076120, NHLBI-R01HL135568, NIBIB-R01EB016701, and NIGMS-P41GM103545. Software maintenance and support are provided within the funding period.
google_analytics: ['UA-36723568-3', 'mkdocs.org']

nav:
- Home: 'index.md'
- Getting Started:
   - 'Shapes, What & From Where?':           'getting-started/shapes.md'
   - 'Shape Modeling Workflow':              'getting-started/workflow.md'
   - 'ShapeWorks Success Stories':           'getting-started/sw-stories.md'   
   - 'ShapeWorks Interfaces':                'getting-started/interfaces.md'   
   - 'Examples':                             'getting-started/examples.md'
   - 'How-Tos':                              'getting-started/how-tos.md'
- For Users:
   - 'How to Install ShapeWorks?':           'users/install.md'
   - 'How to Cite ShapeWorks?':              'users/citation.md'
   - 'Revelant Papers':                      'users/papers.md'
- Workflow:
   - 'How to Groom Your Dataset?':           'workflow/groom.md'
   - 'How to Optimize Your Shape Model?' :   'workflow/optimize.md'        
   - 'How to Analyze Your Shape Model?' :    'workflow/analyze.md'     
- What is New?:
   - 'New in ShapeWorks Studio':             'new/new-studio.md'
   - 'ShapeWorks Takes ~85% Less Memory':    'new/openvdb.md'
   - 'ShapeWorks Directly on Meshes':        'new/sw-meshes.md'
   - 'ShapeWorks Command':                   'new/shapeworks-command.md'
   - 'Shape Model Evaluation':               'new/ssm-eval.md'
   - 'ShapeWorks in Python':                 'new/shapeworks-python.md'
   - 'Ellipsoid Joint Generation':           'new/ellipsoid-joint-generation.md'
- ShapeWorks Tools:
   - 'ShapeWorks Commands': 'tools/ShapeWorksCommands.md'
- ShapeWorks Studio:
   - 'Getting Started With ShapeWorks Studio': 'studio/getting-started-with-studio.md'
   - 'Multiple Domains SSM': 'studio/multiple-domains.md'
   - 'DeepSSM in Studio': 'studio/deepssm-in-studio.md'
- ShapeWorks in Python:
   - 'Getting Started with Notebooks' :               'notebooks/getting-started-with-notebooks.ipynb'  
   - 'Getting Started with Segmentations' :           'notebooks/getting-started-with-segmentations.ipynb'  
   - 'Getting Started with Meshes' :                  'notebooks/getting-started-with-meshes.ipynb'
   - 'Getting Started with Exploring Segmentations' : 'notebooks/getting-started-with-exploring-segmentations.ipynb'
   - 'Getting Started with Data Augmentation' :       'notebooks/getting-started-with-data-augmentation.ipynb'
   - 'Getting Started with Shape Cohort Generation' : 'notebooks/getting-started-with-shape-cohort-generation.ipynb'
   - 'Array passing without copying' :                'notebooks/array-passing-without-copying.ipynb'
   - 'Create and apply Image transforms' :            'notebooks/create-and-apply-image-transforms.ipynb'
   - 'Create and apply Mesh transforms' :             'notebooks/create-and-apply-mesh-transforms.ipynb'
- Deep Learning & SSMs:
   - 'PyTorch GPU Support for ShapeWorks':   'deep-learning/pytorch-gpu.md'
   - 'Data Augmentation for Deep Learning':  'deep-learning/data-augmentation.md'
   - 'SSMs Directly from Images':            'deep-learning/deep-ssm.md'
- Use Cases:
   - 'Getting Started with Use Cases':                               'use-cases/use-cases.md'
   - Segmentation Based Use Cases:
      - 'Ellipsoid: Basic Example':                                  'use-cases/segmentation-based/ellipsoid.md'
      - 'Left Atrium: Shape Model from Segmentations':               'use-cases/segmentation-based/left-atrium.md'
      - 'Fixed Domains Ellipsoid: Shape Model on New Shapes':        'use-cases/segmentation-based/fixed-domain-ellipsoid.md'
      - 'Shape Model for Multiple Domains from Segmentations':       'use-cases/segmentation-based/ellipsoid-multiple-domain.md'
   - Mesh Based Use Cases:
      - 'Ellipsoid Mesh: Basic Example':                             'use-cases/mesh-based/ellipsoid_mesh.md'
      - 'Femur: Shape Model on Distance Transforms from Meshes':     'use-cases/mesh-based/femur.md'
      - 'Femur-Mesh: Shape Model directly from Mesh':                'use-cases/mesh-based/femur-mesh.md'
      - 'Lumps: Shape Model directly from Mesh':                     'use-cases/mesh-based/lumps.md'
      - 'Thin Cavity Bean: Shape Model with Geodesic Distances':     'use-cases/mesh-based/thin-cavity-bean.md'
      - 'Shape Model for Multiple Domains directly from Mesh':       'use-cases/mesh-based/ellipsoid-multiple-domain-mesh.md'
   - Contour Based Use Cases:
      - 'Supershapes:Shape Model for Contour Domains':               'use-cases/contour-based/supershapes-contour.md'
   - Constraints Based Use Cases:
      - 'Ellipsoid: Shape Model with Cutting Planes':                'use-cases/constraint-based/ellipsoid-cutting-planes.md'
      - 'Femur:Shape Model with Cutting Planes':                     'use-cases//constraint-based/femur-cutting-planes.md'
   - Statistics Based Use Cases:
      - 'Ellipsoid: Shape Statistics in Python':                     'use-cases/stats-based/ellipsoid-pca.md'   
      - 'Femur: Group Difference Statistics in Python':              'use-cases/stats-based/femur-pvalues.md'
      - 'Ellipsoid: Shape Evaluation in Python':                     'use-cases/stats-based/ellipsoid-evaluate.md'
   - Deep Learning Based Use Cases:
      - 'Femur SSM Directly from Images':                            'use-cases/deep-learning-based/deep-ssm-femur.md'
   - 'Right Ventricle: Highly Variable Shapes':                      'use-cases/right-ventricle.md'
   
- For Developers:
   - 'How to Build ShapeWorks from Source?': 'dev/build.md'
   - 'How to Contribute to ShapeWorks?':     'dev/contribute.md'
   - 'How to Add ShapeWorks Commands?':      'dev/commands.md'
   - 'How to Add Python APIs?':              'dev/python-apis.md'
   - 'How to Add and Run Unit Tests?':       'dev/tests.md'
   - 'How to Add New Use Cases?':            'dev/new-use-case.md'
   - 'How to Add New Datasets?':             'dev/datasets.md'
   - 'How to Add New Notebooks?':            'dev/new-notebook.md'
   - 'When Modifying Existing Datasets':     'dev/modify-datasets.md'
   - 'Getting Started with Documentation':   'dev/docs.md'
   - 'Getting Started with GitHub Actions':  'dev/gh-actions.md'
   - 'Getting Started with Markdown':        'dev/markdown.md'
   - 'Adding to PATH Environment Variable':  'dev/paths.md'

- API Reference:
   - Groups:     'api/Modules/index_groups.md'
   - Namespaces: 'api/Namespaces/index_namespaces.md'
   - Classes:    'api/Classes/index_classes.md'
   - Files:      'api/Files/index_files.md'

- About:
   - 'Meet ShapeWorkers!':  'about/team.md'
   - 'Release Notes':      'about/release-notes.md'
   - 'License':            'about/license.md'
   - 'Contact Us':         'about/contact.md'
 

theme:
   name: readthedocs #rtd-dropdown #readthedocs #yeti  #united  #spacelab  #sandstone  #minty #lumen #flatly
   include_sidebar: true
   highlightjs: true
   hljs_languages:
      - yaml
      - python
      - c++

markdown_extensions:
   - attr_list
   - fontawesome_markdown
   - pymdownx.tasklist
   - mdx_math
   - admonition
   - pymdownx.superfences
   - pymdownx.details
   - pymdownx.arithmatex:
      generic: true

extra_css:
    - css/custom.css

extra_javascript:
  - assets/mathjaxhelper.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js  

plugins:
  - search
  - mkdocs-jupyter:
      execute: False
      include_source: True
